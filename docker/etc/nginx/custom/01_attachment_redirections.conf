## Attachments.
location /attachments/ {
  try_files /dev/null @reliefweb-file;
}

## Attachments previews.
location /sites/default/files/styles/thumbnail/public/previews/ {
  try_files /dev/null @reliefweb-file;
}
location /sites/default/files/styles/small/public/previews/ {
  try_files /dev/null @reliefweb-file;
}
location /sites/default/files/styles/medium/public/previews/ {
  try_files /dev/null @reliefweb-file;
}
location /sites/default/files/styles/large/public/previews/ {
  try_files /dev/null @reliefweb-file;
}

## Report images.
## @todo add a `extra-large` if this style is added to ReliefWeb (UNO-771).
location /sites/default/files/styles/small/public/images/reports/ {
  try_files /dev/null @reliefweb-file;
}
location /sites/default/files/styles/medium/public/images/reports/ {
  try_files /dev/null @reliefweb-file;
}
location /sites/default/files/styles/large/public/images/reports/ {
  try_files /dev/null @reliefweb-file;
}

## Pass the request to ReliefWeb.

location @reliefweb-file {
  ## Make sure we catch errors to be able to use our handlers.
  proxy_intercept_errors on;

  ## Use our custom handlers so we can set the content disposition
  ## to inline to prevent the browser from downloading a file with the
  ## error message.
  error_page 404 @attachment-404;
  error_page 429 @attachment-429;
  error_page 500 501 502 503 504 @attachment-500;

  ## Ensure the proxy host is in a variable, so nginx will not cache the IP
  ## indefinitely and cause 502 errors if the load balancer IPs change.
  ## Retrieve the mapbox access token.
  set_by_lua $reliefweb_site 'return os.getenv("RELIEFWEB_SITE") or "https://reliefweb.int"';

  ## Pass the request to ReliefWeb.
  proxy_ssl_server_name on;
  proxy_pass $reliefweb_site;

  ## Override connection and buffer vars: do not attempt to buffer, just throw
  ## the data out right away and close the docstore connection when done.
  proxy_set_header Connection '';
  proxy_buffering off;
  tcp_nodelay on;
  tcp_nopush off;
}

## 404 handler for attachments that prevent browsers from downloading a file
## with the attachment file name but containing a "404 Not Found" message.
location @attachment-404 {
  add_header Content-Type 'text/plain' always;
  add_header Content-Disposition 'inline' always;
  return 404 "404 Not Found";
}

## 429 handler for attachments that is called when the upstream connection
## is rate limited.
location @attachment-429 {
  add_header Content-Type 'text/plain' always;
  add_header Content-Disposition 'inline' always;
  return 429 "429 Too Many Requests";
}

## 50x handler for attachments that is called when a server error occurs.
location @attachment-500 {
  add_header Content-Type 'text/plain' always;
  add_header Content-Disposition 'inline' always;
  return 500 "500 Server Error";
}
