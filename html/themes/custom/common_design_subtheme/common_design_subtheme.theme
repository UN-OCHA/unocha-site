<?php

/**
 * @file
 * Template overrides, preprocess, and hooks for the OCHA Common Design theme.
 */

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function common_design_subtheme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $is_front = \Drupal::service('path.matcher')->isFrontPage();

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }

  if ($is_front && $node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__front__' . $node->bundle();
  }
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function common_design_subtheme_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  // Add view mode theme suggestions.
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function common_design_subtheme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $is_front = \Drupal::service('path.matcher')->isFrontPage();
  $suggestions = [];
  $node = $variables['elements']['#node'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  $suggestions[] = 'node__' . $sanitized_view_mode;
  $suggestions[] = 'node__' . $node
    ->bundle();
  $suggestions[] = 'node__' . $node
    ->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'node__' . $node
    ->id();
  $suggestions[] = 'node__' . $node
    ->id() . '__' . $sanitized_view_mode;
  if ($is_front && $node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'node__front__' . $node
      ->bundle() . '__' . $sanitized_view_mode;
  }
  return $suggestions;
}

/**
 * Implements hook_preprocess_menu().
 */
function common_design_subtheme_preprocess_menu(array &$variables) {
  if ($variables['menu_name'] == 'main') {
    // Mark items as using a mega menu when the Mega menu viewmode is selected.
    foreach ($variables['items'] as &$item) {
      $item['mega_menu'] = $item['content']['#view_mode'] == 'mega_menu';
    }
  }
}

/**
 * Implements hook_preprocess_node().
 *
 * Use the page title block for the title and display the local tasks below it.
 * We use common_design_subtheme_get_block_render_array() that will cache the
 * render array of the blocks so that they are not re-rendered and displayed
 * again.
 *
 * @see common_design_subtheme_preprocess_page()
 * @see common_design_subtheme_get_block_render_array()
 */
function common_design_subtheme_preprocess_node(&$variables) {
  $node = $variables['node'];
  $language = $node->language();
  $variables['attributes']['lang'] = $language->getId();
  $variables['attributes']['dir'] = $language->getDirection();

  // Add the SVGs for gho-social-links so we can output them in multiple
  // templates without having to keep them up to date.
  $icon_twitter = file_get_contents(\Drupal::service('extension.path.resolver')->getPath('theme', 'common_design_subtheme') . '/components/cd-social-links/img/icon--twitter.svg');
  $icon_facebook = file_get_contents(\Drupal::service('extension.path.resolver')->getPath('theme', 'common_design_subtheme') . '/components/cd-social-links/img/icon--facebook.svg');
  $icon_linkedin = file_get_contents(\Drupal::service('extension.path.resolver')->getPath('theme', 'common_design_subtheme') . '/components/cd-social-links/img/icon--linkedin.svg');
  $icon_email = file_get_contents(\Drupal::service('extension.path.resolver')->getPath('theme', 'common_design_subtheme') . '/components/cd-social-links/img/icon--email.svg');
  $icon_copyurl = file_get_contents(\Drupal::service('extension.path.resolver')->getPath('theme', 'common_design_subtheme') . '/components/cd-social-links/img/icon--copyurl.svg');
  $icon_pdf = file_get_contents(\Drupal::service('extension.path.resolver')->getPath('theme', 'common_design_subtheme') . '/components/cd-social-links/img/icon--pdf.svg');
  $variables['icon_twitter'] = $icon_twitter;
  $variables['icon_facebook'] = $icon_facebook;
  $variables['icon_linkedin'] = $icon_linkedin;
  $variables['icon_email'] = $icon_email;
  $variables['icon_copyurl'] = $icon_copyurl;
  $variables['icon_pdf'] = $icon_pdf;

  // Add a link to download the PDF version of an article if any.
  if ($node->bundle() === 'article' && $node->hasField('field_pdf')) {
    $fid = $node->field_pdf->target_id;
    if (!empty($fid)) {
      $variables['pdf_download_url'] = '/node/' . $node->id() . '/download';
    }
  }
}
