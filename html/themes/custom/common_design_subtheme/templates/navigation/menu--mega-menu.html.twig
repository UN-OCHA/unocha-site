{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}
{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {# When outputting menu level as a class, use the "cosmetic" value so that
       classnames begin with 1 instead of 0. #}
    {% set menu_level_cosmetic = menu_level + 1 %}
    {% set component = 'cd-nav-level-' ~ menu_level_cosmetic %}

    {%
      set menu_classes = [
        'menu',
        'uno-mega-menu__menu--level-' ~ menu_level_cosmetic,
        menu_level > 0 ? component ~ '__dropdown'
      ]
    %}

    {% set parent_id = attributes.id ?? (component ~ menu_level) %}

    <ul{{ attributes.addClass(menu_classes).setAttribute('role', 'list') }}>

    {% for item in items %}

      {% set title = item.title == '%username%' ? username : item.title %}
      {% set id = (parent_id ~ '-item-' ~ loop.index)|clean_id %}

      {% if item.is_expanded and item.below and menu_level == 0 %}

        {%
          set classes = [
            'uno-mega-menu__menu-item',
            item.is_expanded ? 'menu-item--expanded',
            item.is_collapsed ? 'menu-item--collapsed',
            item.in_active_trail ? 'menu-item--active-trail',
            'uno-mega-menu__block'
          ]
        %}

        <li{{ item.attributes.addClass(classes) }}>
          {# Progressive enhancement: make sure there is always a menu entry.
            - If the menu item has children and javascript is enabled then this
              will be replaced with a button to show the child menu.
            - If the menu item has children, an id attribute / value is added. #}
          {# {% if item.url %}
          <a class="cd-nav__btn {{ component ~ '__btn' }}" href="{{ item.url }}" id="{{ id }}"><span>{{ title }}</span></a>
          {% else %} #}
          <span class="uno-mega-menu__heading" id="{{ id }}">{{ title }}</span>
          {# {% endif %} #}

        {# If the menu item has children then we mark it as toggable and we'll
          let the dropdown javascript handle the rest. #}
          {%
            set attributes =  create_attribute({
              'data-cd-toggable': item.title,
              'data-cd-icon': 'arrow-down',
              'data-cd-component': uno-mega-menu,
              'data-cd-replace': id,
              'id': ('uno-mega-menu-' ~ id)|clean_id,
            })
          %}

          {# Adding 1 to menu_level here is NOT cosmetic, so the increment is
            spelled out explicitly to avoid any accidental find/replace or
            other developer change in the future. This increment powers the
            recursive macro so that the menu renders its entire depth. #}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}

        </li>

      {% else %}

        {%
          set classes = [
            'uno-mega-menu__menu-item',
            'uno-mega-menu__menu-item--level-' ~ menu_level_cosmetic,
            item.in_active_trail ? 'menu-item--active-trail',
          ]
        %}

        <li{{ item.attributes.addClass(classes) }}>
          {# Progressive enhancement: make sure there is always a menu entry.
            - If the menu item has children and javascript is enabled then this
              will be replaced with a button to show the child menu.
            - If the menu item has children, an id attribute / value is added. #}
          {% if item.url %}
          <a class="cd-nav__btn {{ component ~ '__btn' }}" href="{{ item.url }}" id="{{ id }}"><span>{{ title }}</span></a>
          {% else %}
          <span class="uno-mega-menu__heading" id="{{ id }}">{{ title }}</span>
          {% endif %}

          {# Adding 1 to menu_level here is NOT cosmetic, so the increment is
            spelled out explicitly to avoid any accidental find/replace or
            other developer change in the future. This increment powers the
            recursive macro so that the menu renders its entire depth. #}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}

        </li>

      {% endif %}

    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
