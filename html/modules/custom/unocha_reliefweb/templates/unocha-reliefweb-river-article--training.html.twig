{#

/**
 * @file
 * Template file for a training entity article in a river.
 *
 * Available variables;
 * - level: heading level (defaults to 3)
 * - attributes: article attributes
 * - entity: the article entity's data as an associative array with notably:
 *   - url: url to the full article/page
 *   - title: article title
 *   - langcode: article language code
 *   - id: entity id
 *   - bundle: entity bundle.
 *   - tags (optional): list of terms the entity is tagged with
 *   - various properties like posting date, status etc.
 * - meta_attributes: meta information attributes.
 */

#}
<article{{ attributes
  .addClass([
    'rw-river-article',
    'rw-river-article--' ~ entity.bundle,
  ])
  .setAttribute('data-id', entity.id)
}}>
  {# Header with country slug and title. #}
  <header class="rw-river-article__header">
    {# Country slug. #}
    {{ render_var({
      '#theme': 'unocha_reliefweb_entity_country_slug',
      '#countries': entity.tags.country,
    }) }}

    {# Title. #}
    {{ render_var({
      '#theme': 'unocha_reliefweb_river_article_title',
      '#level': level,
      '#langcode': entity.langcode,
      '#url': entity.url,
      '#title': entity.title,
    }) }}
  </header>

  {# Footer with meta information (sources, dates etc.). #}
  <footer class="rw-river-article__footer">
    {% set meta = {
      'source': {
        'type': 'taglist',
        'label': entity.tags.source|length > 1 ? 'Organizations'|t : 'Organization'|t,
        'value': entity.tags.source,
        'count': 1,
        'sort': 'shortname',
        'display': 'shortname',
      },
      'posted': {
        'type': 'date',
        'label': 'Posted'|t,
        'value': entity.posted,
      }
    } %}

    {# Training dates. #}
    {% if entity.start is empty %}
      {% set meta = meta|merge({
        'training-date': {
          'type': 'simple',
          'label': 'Status'|t,
          'value': 'Ongoing course'|t,
        }
      }) %}
    {% else %}
      {% set meta = meta|merge({
        'training-date': {
          'type': 'date-range',
          'label': (entity.end and entity.end != entity.start) ? 'Training dates'|t : 'Training date'|t,
          'value': {
            'start': entity.start,
            'end': entity.end,
          },
        }
      }) %}
    {% endif %}

    {{ render_var({
      '#theme': 'unocha_reliefweb_entity_meta',
      '#attributes': meta_attributes,
      '#meta': meta|merge({
        'registration': {
          'type': 'date',
          'label': 'Registration deadline'|t,
          'value': entity.registration,
        }
      })
    }) }}
  </footer>
</article>
